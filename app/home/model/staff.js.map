{
    "version": 3,
    "sources": [
        "../../../src/home/model/staff.js"
    ],
    "names": [],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8KAMI,M,GAAS;AACL,mBAAM;AACF,yBAAQ,CADN;AAEF,sBAAK;AAFH,aADD;AAKL,iBAAI;AACA,yBAAQ,EADR;AAEA,sBAAK;AAFL,aALC;AASL,oBAAO;AACH,yBAAQ,GADL;AAEH,sBAAK;AAFF,aATF;AAaL,oBAAO;AACH,yBAAQ,EADL;AAEH,sBAAK;AAFF,aAbF;AAiBL,kBAAK;AACD,yBAAQ,EADP;AAED,sBAAK;AAFJ,aAjBA;AAqBL,qBAAQ;AACJ,yBAAS,oBAAY;AACjB,2BAAO,IAAI,IAAJ,GAAW,OAAX,EAAP;AACH,iBAHG;AAIJ,0BAAS;AAJL,aArBH;AA2BL,oBAAO;AACH,yBAAQ,oBAAW;AACf,2BAAO,IAAI,IAAJ,GAAW,OAAX,EAAP;AACH;AAHE;;AA3BF,S;;;qBAmCH,a;8FAAc,M;gBACZ,K;;;;;;mCAAc,KAAK,KAAL,CAAW,EAAC,QAAO,MAAR,EAAX,EAA4B,IAA5B,E;;;AAAd,iC;6DACG,K;;;;;;;;;;;;;;;;;qBAGL,Q;+FAAS,K;gBAEP,M;;;;;AADJ,kCAAM,IAAN,GAAa,EAAb;;mCACmB,KAAK,OAAL,CAAa,KAAb,EAAmB,EAAC,QAAO,MAAM,MAAd,EAAnB,C;;;AAAf,kC;;AACJ,kCAAM,GAAN,GAAa,OAAO,EAApB;8DACO,K;;;;;;;;;;;;;;;;;qBAGL,W;+FAAY,E,EAAG,I;gBACb,C,EACA,M;;;;;AADA,6B,GAAI,IAAI,IAAJ,GAAW,OAAX,E;;mCACW,KAAK,KAAL,CAAW,EAAC,KAAI,EAAL,EAAX,EAAqB,MAArB,CAA4B,IAA5B,C;;;AAAf,kC;8DACG,M;;;;;;;;;;;;;;;;;qBAGL,M;+FAAO,E,EAAG,G;gBACR,G;;;;;;mCAAY,KAAK,KAAL,CAAW,OAAX,EAAoB,KAApB,CAA0B,EAAC,KAAI,EAAL,EAA1B,EAAoC,MAApC,CAA2C,EAAC,OAAO,EAAC,QAAQ,GAAT,EAAR,EAA3C,C;;;AAAZ,+B;8DACG,G;;;;;;;;;;;;;;;;;;EAzDc,MAAM,KAAN,CAAY,K",
    "file": "../../../src/home/model/staff.js",
    "sourcesContent": [
        "'use strict';\n/**\n * model\n */\nexport default class extends think.model.mongo {\n\n    schema = {\n        state:{\n            default:0,\n            type:\"int\"\n        },\n        age:{\n            default:18,\n            type:\"int\"\n        },\n        height:{\n            default:165,\n            type:\"int\"\n        },\n        weight:{\n            default:50,\n            type:\"int\"\n        },\n        desc:{\n            default:\"\",\n            type:\"string\"\n        },\n        created:{\n            default: function () {\n                return new Date().getTime();\n            },\n            readonly:true\n        },\n        update:{\n            default:function (){\n                return new Date().getTime();\n            }\n        }\n\n    };\n\n    async findByStaffId(userid){\n        let staff = await this.where({userid:userid}).find();\n        return staff;\n    }\n\n    async addStaff(staff){\n        staff.pics = [];\n        let result = await this.thenAdd(staff,{userid:staff.userid});\n        staff._id  = result.id;\n        return staff;\n    }\n\n    async updateStaff(id,data){\n        let d = new Date().getTime();\n        let result = await this.where({_id:id}).update(data);\n        return result;\n    }\n\n    async addPic(id,pid){\n        let row = await this.model(\"staff\").where({_id:id}).update({$push: {\"pics\": pid}});\n        return row;\n    }\n\n\n}"
    ]
}