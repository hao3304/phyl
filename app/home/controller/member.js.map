{
    "version": 3,
    "sources": [
        "../../../src/home/controller/member.js"
    ],
    "names": [],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;mBAUQ,Q;;UACA,Q;;;;;;qBAAkC,KAAK,OAAL,CAAa,UAAb,C;;;AAAlC,sB,GAAY,KAAK,Q;;mBAClB,MAAM,OAAN,CAAc,QAAd,C;;;;;+CACM,KAAK,IAAL,CAAU,MAAV,C;;;oBACA,SAAS,IAAT,IAAgB,Q;;;;;+CAChB,KAAK,IAAL,CAAU,MAAV,C;;;;;;;;;;;;;;;;;mBAIL,Y;;UAEE,I,EACA,I,EACA,K,EACA,I;;;;;mBAJH,KAAK,KAAL,E;;;;;AACG,kB,GAAO,KAAK,GAAL,CAAS,MAAT,KAAkB,C;AACzB,kB,GAAO,KAAK,GAAL,CAAS,MAAT,KAAkB,E;AACzB,mB,GAAQ,KAAK,KAAL,CAAW,OAAX,C;;qBACK,MAAM,KAAN,CAAY,wBAAZ,EAAsC,IAAtC,CAA2C,IAA3C,EAAgD,IAAhD,EAAsD,KAAtD,CAA4D,EAAC,OAAM,CAAP,EAA5D,EAAuE,KAAvE,CAA6E,aAA7E,EAA4F,WAA5F,E;;;AAAb,kB;gDACG,KAAK,OAAL,CAAa,IAAb,C;;;;;;;;;;;;;;;;;mBAIL,c;;UAEE,E,EACA,K,EACA,I;;;;;mBAHH,KAAK,KAAL,E;;;;;AACG,gB,GAAK,KAAK,GAAL,CAAS,IAAT,C;AACL,mB,GAAQ,KAAK,KAAL,CAAW,OAAX,C;;qBACK,MAAM,KAAN,CAAY,EAAC,KAAI,EAAL,EAAZ,EAAsB,IAAtB,E;;;AAAb,kB;gDACG,KAAK,OAAL,CAAa,IAAb,C;;;;;;;;;;;;;;;;;mBAIL,W;;UAEE,I,EAIA,I,EACA,G,EAGA,K,EAyBA,I,EACA,I,EACA,K,EACA,I;;;;;mBArCH,KAAK,MAAL,E;;;;;AACG,kB,GAAO,KAAK,IAAL,E;;mBACR,MAAM,OAAN,CAAc,IAAd,C;;;;;gDACM,KAAK,IAAL,CAAU,eAAV,C;;;;qBAEQ,KAAK,KAAL,CAAW,QAAX,EAAqB,KAArB,CAA2B,EAAC,KAAI,KAAK,QAAL,CAAc,GAAnB,EAA3B,EAAoD,IAApD,E;;;AAAb,kB;;qBACY,KAAK,KAAL,CAAW,OAAX,EAAoB,GAApB,CAAwB,EAAC,MAAK,IAAN,EAAW,MAAK,IAAhB,EAAxB,C;;;AAAZ,iB;AAGA,mB,GAAQ,KAAK,UAAL,CAAgB,OAAhB,C;;;AAEZ,oBAAM,OAAN,CAAc;AACZ,0BAAU,KAAK,QAAL,CAAc;AADZ,eAAd,EAEE;AACA,2BAAW,MADX;AAEA,wBAAQ;AACN,6BAAW;AADL,iBAFR;AAKA,wBAAO;AALP,eAFF;;AAUA,oBAAM,OAAN,CAAc;AACZ,2BAAW;AADC,eAAd,EAEE;AACA,2BAAW,MADX;AAEA,wBAAQ;AACN,6BAAW;AADL,iBAFR;AAKA,wBAAO;AALP,eAFF;;gDAUO,KAAK,OAAL,CAAa,GAAb,C;;;mBAEN,KAAK,KAAL,E;;;;;AACG,kB,GAAO,KAAK,GAAL,CAAS,MAAT,KAAkB,C;AACzB,kB,GAAO,KAAK,GAAL,CAAS,MAAT,KAAkB,E;AACzB,mB,GAAQ,KAAK,KAAL,CAAW,OAAX,C;;qBACK,MAAM,IAAN,CAAW,IAAX,EAAgB,IAAhB,EAAsB,KAAtB,CAA4B,EAAC,eAAc,KAAK,QAAL,CAAc,MAA7B,EAA5B,EAAkE,KAAlE,CAAwE,cAAxE,EAAwF,WAAxF,E;;;AAAb,kB;gDACG,KAAK,OAAL,CAAa,IAAb,C",
    "file": "../../../src/home/controller/member.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\n\nexport default class extends Base {\n\n\n\n  /**\n   * before magic method\n   * @return {Promise} []\n   */\n  async __before(){\n    let userinfo  = this.userinfo = await this.session(\"userinfo\");\n    if(think.isEmpty(userinfo)){\n      return this.fail(\"没有权限\");\n    }else if(userinfo.type !=\"member\"){\n      return this.fail(\"没有权限\");\n    }\n  }\n\n  async staffsAction(){\n    if(this.isGet()){\n      let page = this.get(\"page\")||0;\n      let size = this.get(\"size\")||20;\n      let model = this.model(\"staff\");\n      let list = await model.field(\"name,avatar,age,avatar\").page(page,size).where({state:0}).order(\"update DESC\").countSelect();\n      return this.success(list);\n    }\n  }\n\n  async getstaffAction(){\n    if(this.isGet()){\n      let id = this.get(\"id\");\n      let model = this.model(\"staff\");\n      let info = await model.where({_id:id}).find();\n      return this.success(info);\n    }\n  }\n\n  async orderAction(){\n    if(this.isPost()){\n      let data = this.post();\n      if(think.isEmpty(data)){\n        return this.fail(\"data is empty\");\n      }\n      let user = await this.model('member').where({_id:this.userinfo._id}).find();\n      let row = await this.model('order').add({user:user,list:data});\n\n\n      let oauth = this.controller(\"oauth\");\n\n      oauth.sendMsg({\n        \"touser\": this.userinfo.userid\n      },{\n        \"msgtype\": \"text\",\n        \"text\": {\n          \"content\": \"您的订单提交成功,我们的工作人员将会尽快联系您,请勿重复提交。\"\n        },\n        \"safe\":\"0\"\n      });\n\n      oauth.sendMsg({\n        \"toparty\": \"10\"\n      },{\n        \"msgtype\": \"text\",\n        \"text\": {\n          \"content\": \"有新的订单,请注意查看。\"\n        },\n        \"safe\":\"0\"\n      });\n\n      return this.success(row);\n    }\n    if(this.isGet()){\n      let page = this.get(\"page\")||0;\n      let size = this.get(\"size\")||20;\n      let model = this.model(\"order\");\n      let list = await model.page(page,size).where({\"user.userid\":this.userinfo.userid}).order(\"created DESC\").countSelect();\n      return this.success(list);\n    }\n  }\n\n}"
    ]
}