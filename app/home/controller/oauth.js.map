{
    "version": 3,
    "sources": [
        "../../../src/home/controller/oauth.js"
    ],
    "names": [],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;AACA,IAAI,SAAS,kCAAQ,iBAAO,MAAf,EAAsB,iBAAO,UAA7B,EAAwC,CAAxC,CAAb;;;;;;;;;;;;;;;mBAMQ,W;;UAEA,I,EACA,Q,EACA,G,EACA,I,EAOE,Q;;;;;;AAVF,kB,GAAO,KAAK,GAAL,CAAS,MAAT,C;;qBACU,KAAK,OAAL,CAAa,IAAb,C;;;AAAjB,sB;AACA,iB,GAAM,aAAW,IAAX,GAAgB,a;AACtB,kB,GAAO,KAAK,KAAL,CAAW,MAAX,C;;mBAER,Q;;;;;AACD,mBAAK,QAAL,CAAc,GAAd;;;;;;mBAEQ,I;;;;;AAEJ,sB,GAAW,E;4BACP,I;8CACA,O,wBAGD,Q,wBAGA,O;;;;;qBALc,KAAK,OAAL,CAAa,IAAb,C;;;AAAjB,sB;;;;;qBAGiB,KAAK,QAAL,CAAc,IAAd,C;;;AAAjB,sB;;;;;qBAGiB,KAAK,OAAL,CAAa,IAAb,C;;;AAAjB,sB;;;;AAGJ,mBAAK,OAAL,CAAa,UAAb,EAAwB,EAAC,KAAI,SAAS,GAAd,EAAkB,QAAO,SAAS,MAAlC,EAAyC,MAAK,IAA9C,EAAxB;AACA,mBAAK,QAAL,CAAc,GAAd;;;;;;AAGA,mBAAK,QAAL,CAAc,KAAK,eAAL,EAAd;;;;;;;;;;;;;;;;;mBAIE,O;2FAAQ,I;UACR,I,EAGA,G;;;;;;qBAHa,KAAK,OAAL,CAAa,UAAb,C;;;AAAb,kB;AAGA,iB,GAAM,MAAM,OAAN,CAAc,IAAd,IAAoB,KAApB,GAA0B,I;;mBAEjC,G;;;;;oBACE,KAAK,IAAL,IAAa,I;;;;;gDACP,K;;;gDAIJ,G;;;;;;;;;;;;;;;;;;;;;mBAOT,e,8BAAiB;AACf,WAAO,OAAO,eAAP,CAAuB,YAAU,KAAK,IAAL,CAAU,IAApB,GAAyB,KAAK,IAAL,CAAU,GAA1D,EAA8D,OAA9D,EAAsE,iBAAtE,CAAP;AACD,G;;;;;;;;;mBAOK,S;2FAAU,I;;;;;gDACP,sBAAY,UAAC,OAAD,EAAS,MAAT,EAAkB;AACnC,uBAAO,eAAP,CAAuB,IAAvB,EAA6B,UAAU,GAAV,EAAc,MAAd,EAAsB;AACjD,sBAAG,GAAH,EAAO;AACL,2BAAO,GAAP;AACD,mBAFD,MAEK;AACH,4BAAQ,MAAR;AACD;AACF,iBAND;AAOD,eARM,C;;;;;;;;;;;;;;;;;;;;;;;;mBAkBH,O;2FAAQ,E;;;;;gDACL,sBAAY,UAAC,OAAD,EAAS,MAAT,EAAkB;AACnC,uBAAO,OAAP,CAAe,EAAf,EAAmB,UAAU,GAAV,EAAc,MAAd,EAAsB;AACvC,sBAAG,GAAH,EAAO;AACL,2BAAO,GAAP;AACD,mBAFD,MAEK;AACH,4BAAQ,MAAR;AACD;AACF,iBAND;AAOD,eARM,C;;;;;;;;;;;;;;;;;;;;;;mBAeH,O;2FAAQ,E,EAAG,O;;;;;gDACR,sBAAY,UAAC,OAAD,EAAS,MAAT,EAAkB;AACnC,uBAAO,IAAP,CAAY,EAAZ,EAAe,OAAf,EAAwB,UAAU,GAAV,EAAc,MAAd,EAAsB;AAC5C,sBAAG,GAAH,EAAO;AACL,2BAAO,GAAP;AACD,mBAFD,MAEK;AACH,4BAAQ,MAAR;AACD;AACF,iBAND;AAOD,eARM,C;;;;;;;;;;;;;;;;;;;;;;mBAcH,O;2FAAQ,I;UACR,Q,EACA,M,EACA,K;;;;;AAFA,sB,GAAW,E;;qBACI,KAAK,SAAL,CAAe,IAAf,C;;;AAAf,oB;AACA,mB,GAAS,KAAK,KAAL,CAAW,OAAX,C;;qBACI,MAAM,aAAN,CAAoB,OAAO,MAA3B,C;;;AAAjB,sB;;mBACG,MAAM,OAAN,CAAc,QAAd,C;;;;;;qBACgB,KAAK,OAAL,CAAa,OAAO,MAApB,C;;;AAAjB,sB;;qBACiB,MAAM,QAAN,CAAe,QAAf,C;;;AAAjB,sB;;;gDAEK,Q;;;;;;;;;;;;;;;;;mBAGH,Q;2FAAS,I;UACT,Q,EACA,M,EACA,K;;;;;AAFA,sB,GAAW,E;;qBACI,KAAK,SAAL,CAAe,IAAf,C;;;AAAf,oB;AACA,mB,GAAS,KAAK,KAAL,CAAW,QAAX,C;;qBACI,MAAM,cAAN,CAAqB,OAAO,MAA5B,C;;;AAAjB,sB;;mBAEG,MAAM,OAAN,CAAc,QAAd,C;;;;;;qBACgB,KAAK,OAAL,CAAa,OAAO,MAApB,C;;;AAAjB,sB;;qBACiB,MAAM,SAAN,CAAgB,QAAhB,C;;;AAAjB,sB;;;gDAEK,Q;;;;;;;;;;;;;;;;;mBAIH,O;2FAAQ,I;UACR,Q,EACA,M,EACA,K;;;;;AAFA,sB,GAAW,E;;qBACI,KAAK,SAAL,CAAe,IAAf,C;;;AAAf,oB;AACA,mB,GAAS,KAAK,KAAL,CAAW,OAAX,C;;qBACI,MAAM,aAAN,CAAoB,OAAO,MAA3B,C;;;AAAjB,sB;;mBAEG,MAAM,OAAN,CAAc,QAAd,C;;;;;;qBACgB,KAAK,OAAL,CAAa,OAAO,MAApB,C;;;AAAjB,sB;;qBACiB,MAAM,QAAN,CAAe,QAAf,C;;;AAAjB,sB;;;gDAEK,Q",
    "file": "../../../src/home/controller/oauth.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\nimport API from 'wechat-enterprise-api';\nimport Config from '../../../wechat.js';\nlet Wechat = new API(Config.corpid,Config.corpsecret,0);\nexport default class extends Base {\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  async indexAction(){\n    //auto render template file index_index.html\n    let view = this.get(\"view\");\n    let is_login = await this.isLogin(view);\n    let url = \"/webapp/\"+view+\"/index.html\";\n    let code = this.param(\"code\");\n\n    if(is_login){\n      this.redirect(url);\n\n    } else if(code){\n\n      let userinfo = \"\";\n      switch (view){\n        case  \"staff\":{\n          userinfo = await this.isStaff(code);\n        }break;\n        case \"member\":{\n          userinfo = await this.isMember(code);\n        }break;\n        case \"admin\":{\n          userinfo = await this.isAdmin(code);\n        }break;\n      }\n      this.session(\"userinfo\",{_id:userinfo._id,userid:userinfo.userid,type:view});\n      this.redirect(url);\n\n    }else{\n      this.redirect(this.getAuthorizeURL());\n    }\n  }\n\n  async isLogin(view){\n    let user = await this.session(\"userinfo\");\n\n\n    let res = think.isEmpty(user)?false:true;\n\n    if(res){\n      if(user.type != view){\n        return false;\n      }\n    }\n\n    return res;\n  }\n\n  /**\n   * 获取授权地址\n   */\n\n  getAuthorizeURL(){\n    return Wechat.getAuthorizeURL(\"http://\"+this.http.host+this.http.url,\"state\",\"snsapi_userinfo\");\n  }\n\n  /**\n   *  根据code获取用户id\n   * @param code\n   * @returns {Promise}\n   */\n  async getUserId(code){\n    return new Promise((resolve,reject)=>{\n      Wechat.getUserIdByCode(code, function (err,result) {\n        if(err){\n          reject(err);\n        }else{\n          resolve(result);\n        }\n      })\n    })\n  }\n\n\n\n  /**\n   * 根据userid获取用户信息\n   * @param id\n   * @returns {Promise}\n   */\n  async getUser(id){\n    return new Promise((resolve,reject)=>{\n      Wechat.getUser(id, function (err,result) {\n        if(err){\n          reject(err);\n        }else{\n          resolve(result);\n        }\n      })\n    })\n  }\n\n\n  /**\n   * 发送消息\n   */\n  async sendMsg(to,message){\n    return new Promise((resolve,reject)=>{\n      Wechat.send(to,message, function (err,result) {\n        if(err){\n          reject(err);\n        }else{\n          resolve(result);\n        }\n      })\n    })\n  }\n\n  /**\n   * 工作人员入口\n   */\n  async isStaff(code){\n    let userinfo = \"\";\n    let result = await this.getUserId(code);\n    let Model =  this.model(\"staff\");\n    userinfo = await Model.findByStaffId(result.UserId);\n    if(think.isEmpty(userinfo)){\n      userinfo = await this.getUser(result.UserId);\n      userinfo = await Model.addStaff(userinfo);\n    }\n    return userinfo;\n  }\n\n  async isMember(code){\n    let userinfo = \"\";\n    let result = await this.getUserId(code);\n    let Model =  this.model(\"member\");\n    userinfo = await Model.findByMemberId(result.UserId);\n\n    if(think.isEmpty(userinfo)){\n      userinfo = await this.getUser(result.UserId);\n      userinfo = await Model.addMember(userinfo);\n    }\n    return userinfo;\n  }\n\n\n  async isAdmin(code){\n    let userinfo = \"\";\n    let result = await this.getUserId(code);\n    let Model =  this.model(\"admin\");\n    userinfo = await Model.findByAdminId(result.UserId);\n\n    if(think.isEmpty(userinfo)){\n      userinfo = await this.getUser(result.UserId);\n      userinfo = await Model.addAdmin(userinfo);\n    }\n    return userinfo;\n  }\n\n\n\n\n}"
    ]
}